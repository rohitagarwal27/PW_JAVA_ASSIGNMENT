Q1 - Given an unsorted array arr[] of size N having both negative and positive integers, place
all negative elements at the end of array without changing the order of positive elements
and negative elements

(Medium)

Assignment Solutions

Input :
N = 8
arr[] = {1, -1, 3, 2, -7, -5, 11, 6 }
Output :
1 3 2 11 6 -1 -7 -5
Code:
import java.util.Scanner;
public class Test {
public static void main(String[] args) {
Scanner scn = new Scanner(System.in);
System.out.println(“Enter the length of array: ”);
int n = scn.nextInt();
int[] arr = new int[n];
for(int i = 0; i < n; i++){
arr[i] = scn.nextInt();
}
int[] ans = new int[n];
int idx = 0;
for(int i = 0; i < n; i++){
if(arr[i] >= 0){
ans[idx] = arr[i];
idx++;
}
}
for(int i = 0; i < n; i++){
if(arr[i] < 0){
ans[idx] = arr[i];
idx++;
}
}
for(int i = 0; i < n; i++){
System.out.print(ans[i] + " ");
}
}
}

Cracking the Coding Interview in JAVA - Foundation
Q2 - Given two arrays a[] and b[] of size n and m respectively where m >= n. The task is to find
union between these two arrays and print the number of elements of the union set.
Union of the two arrays can be defined as the set containing distinct elements from both
the arrays. If there are repetitions, then only one occurrence of element should be printed
in the union.

(Medium)

Assignment Solutions

Input:
5 3
1 2 3
1 2 3 4 5
Output:
5
Code:
import java.util.Scanner;
public class Test {
public static void main(String[] args) {
Scanner scn = new Scanner(System.in);
System.out.println(“Enter the length of arrays: ”);
int n = scn.nextInt();
int m = scn.nextInt();
int[] a = new int[n];
int[] b = new int[n];
for(int i = 0; i < n; i++){
a[i] = scn.nextInt();
}
for(int i = 0; i < m; i++){
b[i] = scn.nextInt();
boolean check = false;
for(int j = 0; j < n; j++){
if(b[i] == a[j]){
check = true;
break;
}
}
if(!check){
System.out.println(b[i]);
}
}
}
}

Cracking the Coding Interview in JAVA - Foundation
Q3 - Given an array arr[] and an integer K where K is smaller than size of array, the task is to
find the Kth smallest element in the given array. It is given that all array elements are
distinct.

(Easy)

Assignment Solutions

Input:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output:
7
Code:
import java.util.Scanner;
import java.util.Arrays;
public class Test {
public static void main(String[] args) {
Scanner scn = new Scanner(System.in);
System.out.println(“Enter the length of array: ”);
int n = scn.nextInt();
int[] arr = new int[n];
for(int i = 0; i < n; i++){
arr[i] = scn.nextInt();
}
int k = scn.nextInt();
Arrays.sort(arr);
System.out.print(arr[k-1]);
}
}

Cracking the Coding Interview in JAVA - Foundation
Q4 - Given an unsorted array A of size N that contains only non-negative integers, find a
continuous sub-array which adds to a given number S.
In case of multiple subarrays, return the subarray which comes first on moving from left
to right.
You need to print the start and end index of answer subarray.

(Medium)

Assignment Solutions

Input:
N = 5, S = 12
A[] = {1,2,3,7,5}
Output:
1 3
Code:
import java.util.Scanner;
public class Test {
public static void main(String[] args) {
Scanner scn = new Scanner(System.in);
System.out.println(“Enter the length of array: ”);
int n = scn.nextInt();
int s = scn.nextInt();
int[] arr = new int[n];
for(int i = 0; i < n; i++){
arr[i] = scn.nextInt();
}
int i = 0;
int j = 0;
int sum = 0;
while(j < n){
sum += arr[j];
if(sum > s){
while(sum > s && i < j){
sum -= arr[i];
i++;
}
}
if(sum == s){
System.out.print(i + " ");
System.out.print(j);
break;
}
j++;
}
}
}

Cracking the Coding Interview in JAVA - Foundation

Q5 - Write a Java program to test the equality of two arrays. (Easy)
Assignment Solutions

Input:
5
2 5 7 9 11
2 5 7 9 13
Output:
false
Code:
import java.util.Scanner;
public class Test {
public static void main(String[] args) {
Scanner scn = new Scanner(System.in);
System.out.println(“Enter the length of array: ”);
int n = scn.nextInt();
int[] arr1 = new int[n];
int[] arr2 = new int[n];
for(int i = 0; i < n; i++){
arr1[i] = scn.nextInt();
}
boolean ans = true;
for(int i = 0; i < n; i++){
arr2[i] = scn.nextInt();
if(arr2[i] != arr1[i]){
ans = false;
break;
}
}
System.out.print(ans);
}
}
